node {
    try{
        stage('Clean workspace'){
            deleteDir();
        }

        stage('Preparation'){
            checkout scm
        }

        stage("SonarQube analysis") {
            node {
                withSonarQubeEnv('sonar-1') {
                    sh "ls"
                    sh "mvn sonarqube"
                }
            }
        }

        stage("Quality Gate"){
            timeout(time: 3, unit: 'MINUTES') {
                def qg = waitForQualityGate()
                if (qg.status != 'OK') {
                    error "Pipeline aborted due to quality gate failure: ${qg.status}"
                }
            }
        }

        stage('Build and install'){
            sh "mvn install"
        }
    }catch(e){
        throw e
    }
}